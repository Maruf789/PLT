#Functions to be implemented:
	# double abs(double x);
	# int mat range(int x, int y);
	#	Return a column vector {x; x+1; â€¦ ; y}. If  y < x, return {}
	# int mat ranger(int x, int y);
	#	Similar to range(), except that it returns a row vector.
	# double mat sum_row(double mat mx);
	# double mat sum_col(double mat mx);
	#	Return a vector, as the sum of rows/columns in mat mx.
	# double mat avg_row(double mat mx);
	# double mat avg_col(double mat mx);	
	#	Return a vector, as the average of all rows/columns in mat mx.
	# int mat addrows(int mat mx, int mat dr, string mat drn);
	# double mat addrows(double mat mx, double mat dr, string mat drn);
	# string mat addrows(string mat mx, string mat dr, string mat drn);
	# int mat addcols(int mat mx, int mat dr, string mat drn);
	# double mat addcols(double mat mx, double mat dr, string mat drn);
	# string mat addcols(string mat mx, string mat dr, string mat drn);


# Implementations start here:

# function: find the absolute value of a given double
def double abs(double x) do
	if x < 0 then
		return (-1 * x);
	fi
	return x;	
fed

#function: Return the number of columns in matrix mx;
def int mat range(int x, int y) do
	int mat v;
	int i : x;
	for (y >= i) do
		v : rowcat(v, {i});
		i: i + 1;
	rof
	return v;
fed

#function: Return the number of rows in matrix mx;
def int mat ranger(int x, int y) do
	int mat v;
	int i : x;
	for (y >= i) do
		v : colcat(v, {i});
		i: i + 1;
	rof
	return v;
fed

#function: sum the rows of a matrix
def double mat sum_row(double mat mx) do
	int x;
	int y;
	double mat s: range(1, cols(mx)) * 0.;
	for x in range(1, (rows(mx))) do
		for y in range(1, (cols(mx))) do
			s[1, y]: s[1, y] + mx[x, y];
		rof
	rof
	return s;
fed

#function: sum the columns of a matrix
def double mat sum_col(double mat mx) do
	int x;
	int y;
	double mat s: range(1, rows(mx)) * 0.;
	for x in range(1, (cols(mx))) do
		for y in range(1, (rows(mx))) do
			s[1, y]: s[1, y] + mx[y, x];
		rof
	rof
	return s;
fed

#function: average of the all rows of a matrix

def double mat avg_col(double mat mx) do
	int r;
	int c;
	double sum : 0;
	double avg : 0;
	double mat v;
	for c in range(1, cols(mx)) do
		for r in range(1, rows(mx)) do
			sum : sum + mx[r,c];
		rof
		avg : sum/rows(mx);
		v : colcat(v,{avg});
	rof
	return v;
fed

def double mat avg_row(double mat mx) do
	int r;
	int c;
	double sum : 0;
	double avg : 0;
	double mat v;
	for r in range(1, rows(mx)) do
		for c in range(1, cols(mx)) do
			sum : sum + mx[r,c];
		rof
		avg : sum/cols(mx);
		v : rowcat(v,{avg});
	rof
	return v;
fed

#function: average of the all rows of a matrix

